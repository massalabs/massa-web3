// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies
// @generated from protobuf file "massa/model/v1/datastore.proto" (package "massa.model.v1", syntax proto3)
// tslint:disable
//
// Copyright (c) 2023 MASSA LABS <info@massa.net>
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * AddressKeys holds a list of addresses - keys
 *
 * @generated from protobuf message massa.model.v1.AddressKeysEntries
 */
export interface AddressKeysEntries {
    /**
     * List of address- key entries
     *
     * @generated from protobuf field: repeated massa.model.v1.AddressKeyEntry address_key_entries = 1;
     */
    addressKeyEntries: AddressKeyEntry[];
}
/**
 * AddressKeyEntry
 *
 * @generated from protobuf message massa.model.v1.AddressKeyEntry
 */
export interface AddressKeyEntry {
    /**
     * Associated address of the entry
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * Datastore key
     *
     * @generated from protobuf field: bytes key = 2;
     */
    key: Uint8Array;
}
/**
 * DatastoreEntry
 *
 * @generated from protobuf message massa.model.v1.DatastoreEntry
 */
export interface DatastoreEntry {
    /**
     * final datastore entry value
     *
     * @generated from protobuf field: bytes final_value = 1;
     */
    finalValue: Uint8Array;
    /**
     * candidate_value datastore entry value
     *
     * @generated from protobuf field: bytes candidate_value = 2;
     */
    candidateValue: Uint8Array;
}
// @generated message type with reflection information, may provide speed optimized methods
class AddressKeysEntries$Type extends MessageType<AddressKeysEntries> {
    constructor() {
        super("massa.model.v1.AddressKeysEntries", [
            { no: 1, name: "address_key_entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AddressKeyEntry }
        ]);
    }
    create(value?: PartialMessage<AddressKeysEntries>): AddressKeysEntries {
        const message = { addressKeyEntries: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddressKeysEntries>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddressKeysEntries): AddressKeysEntries {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated massa.model.v1.AddressKeyEntry address_key_entries */ 1:
                    message.addressKeyEntries.push(AddressKeyEntry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddressKeysEntries, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated massa.model.v1.AddressKeyEntry address_key_entries = 1; */
        for (let i = 0; i < message.addressKeyEntries.length; i++)
            AddressKeyEntry.internalBinaryWrite(message.addressKeyEntries[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.AddressKeysEntries
 */
export const AddressKeysEntries = new AddressKeysEntries$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddressKeyEntry$Type extends MessageType<AddressKeyEntry> {
    constructor() {
        super("massa.model.v1.AddressKeyEntry", [
            { no: 1, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value?: PartialMessage<AddressKeyEntry>): AddressKeyEntry {
        const message = { address: "", key: new Uint8Array(0) };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddressKeyEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddressKeyEntry): AddressKeyEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string address */ 1:
                    message.address = reader.string();
                    break;
                case /* bytes key */ 2:
                    message.key = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddressKeyEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string address = 1; */
        if (message.address !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.address);
        /* bytes key = 2; */
        if (message.key.length)
            writer.tag(2, WireType.LengthDelimited).bytes(message.key);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.AddressKeyEntry
 */
export const AddressKeyEntry = new AddressKeyEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DatastoreEntry$Type extends MessageType<DatastoreEntry> {
    constructor() {
        super("massa.model.v1.DatastoreEntry", [
            { no: 1, name: "final_value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "candidate_value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value?: PartialMessage<DatastoreEntry>): DatastoreEntry {
        const message = { finalValue: new Uint8Array(0), candidateValue: new Uint8Array(0) };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DatastoreEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DatastoreEntry): DatastoreEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bytes final_value */ 1:
                    message.finalValue = reader.bytes();
                    break;
                case /* bytes candidate_value */ 2:
                    message.candidateValue = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DatastoreEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bytes final_value = 1; */
        if (message.finalValue.length)
            writer.tag(1, WireType.LengthDelimited).bytes(message.finalValue);
        /* bytes candidate_value = 2; */
        if (message.candidateValue.length)
            writer.tag(2, WireType.LengthDelimited).bytes(message.candidateValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.DatastoreEntry
 */
export const DatastoreEntry = new DatastoreEntry$Type();
