// source: massa/model/v1/stats.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var massa_model_v1_time_pb = require('../../../massa/model/v1/time_pb.js');
goog.object.extend(proto, massa_model_v1_time_pb);
goog.exportSymbol('proto.massa.model.v1.ConsensusStats', null, global);
goog.exportSymbol('proto.massa.model.v1.ExecutionStats', null, global);
goog.exportSymbol('proto.massa.model.v1.NetworkStats', null, global);
goog.exportSymbol('proto.massa.model.v1.PoolStats', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.model.v1.ConsensusStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.model.v1.ConsensusStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.model.v1.ConsensusStats.displayName = 'proto.massa.model.v1.ConsensusStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.model.v1.PoolStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.model.v1.PoolStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.model.v1.PoolStats.displayName = 'proto.massa.model.v1.PoolStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.model.v1.NetworkStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.model.v1.NetworkStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.model.v1.NetworkStats.displayName = 'proto.massa.model.v1.NetworkStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.massa.model.v1.ExecutionStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.massa.model.v1.ExecutionStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.massa.model.v1.ExecutionStats.displayName = 'proto.massa.model.v1.ExecutionStats';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.model.v1.ConsensusStats.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.model.v1.ConsensusStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.model.v1.ConsensusStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.model.v1.ConsensusStats.toObject = function(includeInstance, msg) {
  var f, obj = {
startTimespan: (f = msg.getStartTimespan()) && massa_model_v1_time_pb.NativeTime.toObject(includeInstance, f),
endTimespan: (f = msg.getEndTimespan()) && massa_model_v1_time_pb.NativeTime.toObject(includeInstance, f),
finalBlockCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
staleBlockCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
cliqueCount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.model.v1.ConsensusStats}
 */
proto.massa.model.v1.ConsensusStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.model.v1.ConsensusStats;
  return proto.massa.model.v1.ConsensusStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.model.v1.ConsensusStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.model.v1.ConsensusStats}
 */
proto.massa.model.v1.ConsensusStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new massa_model_v1_time_pb.NativeTime;
      reader.readMessage(value,massa_model_v1_time_pb.NativeTime.deserializeBinaryFromReader);
      msg.setStartTimespan(value);
      break;
    case 2:
      var value = new massa_model_v1_time_pb.NativeTime;
      reader.readMessage(value,massa_model_v1_time_pb.NativeTime.deserializeBinaryFromReader);
      msg.setEndTimespan(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFinalBlockCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStaleBlockCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCliqueCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.model.v1.ConsensusStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.model.v1.ConsensusStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.model.v1.ConsensusStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.model.v1.ConsensusStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTimespan();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      massa_model_v1_time_pb.NativeTime.serializeBinaryToWriter
    );
  }
  f = message.getEndTimespan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      massa_model_v1_time_pb.NativeTime.serializeBinaryToWriter
    );
  }
  f = message.getFinalBlockCount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getStaleBlockCount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getCliqueCount();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional NativeTime start_timespan = 1;
 * @return {?proto.massa.model.v1.NativeTime}
 */
proto.massa.model.v1.ConsensusStats.prototype.getStartTimespan = function() {
  return /** @type{?proto.massa.model.v1.NativeTime} */ (
    jspb.Message.getWrapperField(this, massa_model_v1_time_pb.NativeTime, 1));
};


/**
 * @param {?proto.massa.model.v1.NativeTime|undefined} value
 * @return {!proto.massa.model.v1.ConsensusStats} returns this
*/
proto.massa.model.v1.ConsensusStats.prototype.setStartTimespan = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.model.v1.ConsensusStats} returns this
 */
proto.massa.model.v1.ConsensusStats.prototype.clearStartTimespan = function() {
  return this.setStartTimespan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.model.v1.ConsensusStats.prototype.hasStartTimespan = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NativeTime end_timespan = 2;
 * @return {?proto.massa.model.v1.NativeTime}
 */
proto.massa.model.v1.ConsensusStats.prototype.getEndTimespan = function() {
  return /** @type{?proto.massa.model.v1.NativeTime} */ (
    jspb.Message.getWrapperField(this, massa_model_v1_time_pb.NativeTime, 2));
};


/**
 * @param {?proto.massa.model.v1.NativeTime|undefined} value
 * @return {!proto.massa.model.v1.ConsensusStats} returns this
*/
proto.massa.model.v1.ConsensusStats.prototype.setEndTimespan = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.model.v1.ConsensusStats} returns this
 */
proto.massa.model.v1.ConsensusStats.prototype.clearEndTimespan = function() {
  return this.setEndTimespan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.model.v1.ConsensusStats.prototype.hasEndTimespan = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 final_block_count = 3;
 * @return {number}
 */
proto.massa.model.v1.ConsensusStats.prototype.getFinalBlockCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.ConsensusStats} returns this
 */
proto.massa.model.v1.ConsensusStats.prototype.setFinalBlockCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 stale_block_count = 4;
 * @return {number}
 */
proto.massa.model.v1.ConsensusStats.prototype.getStaleBlockCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.ConsensusStats} returns this
 */
proto.massa.model.v1.ConsensusStats.prototype.setStaleBlockCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 clique_count = 5;
 * @return {number}
 */
proto.massa.model.v1.ConsensusStats.prototype.getCliqueCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.ConsensusStats} returns this
 */
proto.massa.model.v1.ConsensusStats.prototype.setCliqueCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.model.v1.PoolStats.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.model.v1.PoolStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.model.v1.PoolStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.model.v1.PoolStats.toObject = function(includeInstance, msg) {
  var f, obj = {
endorsementsCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
operationsCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.model.v1.PoolStats}
 */
proto.massa.model.v1.PoolStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.model.v1.PoolStats;
  return proto.massa.model.v1.PoolStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.model.v1.PoolStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.model.v1.PoolStats}
 */
proto.massa.model.v1.PoolStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndorsementsCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOperationsCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.model.v1.PoolStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.model.v1.PoolStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.model.v1.PoolStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.model.v1.PoolStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEndorsementsCount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOperationsCount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 endorsements_count = 1;
 * @return {number}
 */
proto.massa.model.v1.PoolStats.prototype.getEndorsementsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.PoolStats} returns this
 */
proto.massa.model.v1.PoolStats.prototype.setEndorsementsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 operations_count = 2;
 * @return {number}
 */
proto.massa.model.v1.PoolStats.prototype.getOperationsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.PoolStats} returns this
 */
proto.massa.model.v1.PoolStats.prototype.setOperationsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.model.v1.NetworkStats.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.model.v1.NetworkStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.model.v1.NetworkStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.model.v1.NetworkStats.toObject = function(includeInstance, msg) {
  var f, obj = {
inConnectionCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
outConnectionCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
knownPeerCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
bannedPeerCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
activeNodeCount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.model.v1.NetworkStats}
 */
proto.massa.model.v1.NetworkStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.model.v1.NetworkStats;
  return proto.massa.model.v1.NetworkStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.model.v1.NetworkStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.model.v1.NetworkStats}
 */
proto.massa.model.v1.NetworkStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInConnectionCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutConnectionCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setKnownPeerCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBannedPeerCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActiveNodeCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.model.v1.NetworkStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.model.v1.NetworkStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.model.v1.NetworkStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.model.v1.NetworkStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInConnectionCount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOutConnectionCount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getKnownPeerCount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getBannedPeerCount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getActiveNodeCount();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional uint64 in_connection_count = 1;
 * @return {number}
 */
proto.massa.model.v1.NetworkStats.prototype.getInConnectionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.NetworkStats} returns this
 */
proto.massa.model.v1.NetworkStats.prototype.setInConnectionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 out_connection_count = 2;
 * @return {number}
 */
proto.massa.model.v1.NetworkStats.prototype.getOutConnectionCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.NetworkStats} returns this
 */
proto.massa.model.v1.NetworkStats.prototype.setOutConnectionCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 known_peer_count = 3;
 * @return {number}
 */
proto.massa.model.v1.NetworkStats.prototype.getKnownPeerCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.NetworkStats} returns this
 */
proto.massa.model.v1.NetworkStats.prototype.setKnownPeerCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 banned_peer_count = 4;
 * @return {number}
 */
proto.massa.model.v1.NetworkStats.prototype.getBannedPeerCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.NetworkStats} returns this
 */
proto.massa.model.v1.NetworkStats.prototype.setBannedPeerCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 active_node_count = 5;
 * @return {number}
 */
proto.massa.model.v1.NetworkStats.prototype.getActiveNodeCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.NetworkStats} returns this
 */
proto.massa.model.v1.NetworkStats.prototype.setActiveNodeCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.massa.model.v1.ExecutionStats.prototype.toObject = function(opt_includeInstance) {
  return proto.massa.model.v1.ExecutionStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.massa.model.v1.ExecutionStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.model.v1.ExecutionStats.toObject = function(includeInstance, msg) {
  var f, obj = {
timeWindowStart: (f = msg.getTimeWindowStart()) && massa_model_v1_time_pb.NativeTime.toObject(includeInstance, f),
timeWindowEnd: (f = msg.getTimeWindowEnd()) && massa_model_v1_time_pb.NativeTime.toObject(includeInstance, f),
finalBlockCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
finalExecutedOperationsCount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.massa.model.v1.ExecutionStats}
 */
proto.massa.model.v1.ExecutionStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.massa.model.v1.ExecutionStats;
  return proto.massa.model.v1.ExecutionStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.massa.model.v1.ExecutionStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.massa.model.v1.ExecutionStats}
 */
proto.massa.model.v1.ExecutionStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new massa_model_v1_time_pb.NativeTime;
      reader.readMessage(value,massa_model_v1_time_pb.NativeTime.deserializeBinaryFromReader);
      msg.setTimeWindowStart(value);
      break;
    case 2:
      var value = new massa_model_v1_time_pb.NativeTime;
      reader.readMessage(value,massa_model_v1_time_pb.NativeTime.deserializeBinaryFromReader);
      msg.setTimeWindowEnd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFinalBlockCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFinalExecutedOperationsCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.massa.model.v1.ExecutionStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.massa.model.v1.ExecutionStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.massa.model.v1.ExecutionStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.massa.model.v1.ExecutionStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeWindowStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      massa_model_v1_time_pb.NativeTime.serializeBinaryToWriter
    );
  }
  f = message.getTimeWindowEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      massa_model_v1_time_pb.NativeTime.serializeBinaryToWriter
    );
  }
  f = message.getFinalBlockCount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getFinalExecutedOperationsCount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional NativeTime time_window_start = 1;
 * @return {?proto.massa.model.v1.NativeTime}
 */
proto.massa.model.v1.ExecutionStats.prototype.getTimeWindowStart = function() {
  return /** @type{?proto.massa.model.v1.NativeTime} */ (
    jspb.Message.getWrapperField(this, massa_model_v1_time_pb.NativeTime, 1));
};


/**
 * @param {?proto.massa.model.v1.NativeTime|undefined} value
 * @return {!proto.massa.model.v1.ExecutionStats} returns this
*/
proto.massa.model.v1.ExecutionStats.prototype.setTimeWindowStart = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.model.v1.ExecutionStats} returns this
 */
proto.massa.model.v1.ExecutionStats.prototype.clearTimeWindowStart = function() {
  return this.setTimeWindowStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.model.v1.ExecutionStats.prototype.hasTimeWindowStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NativeTime time_window_end = 2;
 * @return {?proto.massa.model.v1.NativeTime}
 */
proto.massa.model.v1.ExecutionStats.prototype.getTimeWindowEnd = function() {
  return /** @type{?proto.massa.model.v1.NativeTime} */ (
    jspb.Message.getWrapperField(this, massa_model_v1_time_pb.NativeTime, 2));
};


/**
 * @param {?proto.massa.model.v1.NativeTime|undefined} value
 * @return {!proto.massa.model.v1.ExecutionStats} returns this
*/
proto.massa.model.v1.ExecutionStats.prototype.setTimeWindowEnd = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.massa.model.v1.ExecutionStats} returns this
 */
proto.massa.model.v1.ExecutionStats.prototype.clearTimeWindowEnd = function() {
  return this.setTimeWindowEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.massa.model.v1.ExecutionStats.prototype.hasTimeWindowEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 final_block_count = 3;
 * @return {number}
 */
proto.massa.model.v1.ExecutionStats.prototype.getFinalBlockCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.ExecutionStats} returns this
 */
proto.massa.model.v1.ExecutionStats.prototype.setFinalBlockCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 final_executed_operations_count = 4;
 * @return {number}
 */
proto.massa.model.v1.ExecutionStats.prototype.getFinalExecutedOperationsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.massa.model.v1.ExecutionStats} returns this
 */
proto.massa.model.v1.ExecutionStats.prototype.setFinalExecutedOperationsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


goog.object.extend(exports, proto.massa.model.v1);
