// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "massa/model/v1/denunciation.proto" (package "massa.model.v1", syntax proto3)
// tslint:disable
//
// Copyright (c) 2023 MASSA LABS <info@massa.net>
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Slot } from "./slot";
/**
 * @generated from protobuf message massa.model.v1.Denunciation
 */
export interface Denunciation {
    /**
     * @generated from protobuf oneof: entry
     */
    entry: {
        oneofKind: "blockHeader";
        /**
         * Denunciation block header
         *
         * @generated from protobuf field: massa.model.v1.BlockHeaderDenunciation block_header = 1;
         */
        blockHeader: BlockHeaderDenunciation;
    } | {
        oneofKind: "endorsement";
        /**
         * Denunciation endorsement
         *
         * @generated from protobuf field: massa.model.v1.EndorsementDenunciation endorsement = 2;
         */
        endorsement: EndorsementDenunciation;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message massa.model.v1.BlockHeaderDenunciation
 */
export interface BlockHeaderDenunciation {
    /**
     * Denunciation public key
     *
     * @generated from protobuf field: string public_key = 1;
     */
    publicKey: string;
    /**
     * Denunciation slot
     *
     * @generated from protobuf field: massa.model.v1.Slot slot = 2;
     */
    slot?: Slot;
    /**
     * Denunciation hash 1
     *
     * @generated from protobuf field: string hash_1 = 3;
     */
    hash1: string;
    /**
     * Denunciation hash 2
     *
     * @generated from protobuf field: string hash_2 = 4;
     */
    hash2: string;
    /**
     * Denunciation sig 1
     *
     * @generated from protobuf field: string signature_1 = 5;
     */
    signature1: string;
    /**
     * Denunciation sig 2
     *
     * @generated from protobuf field: string signature_2 = 6;
     */
    signature2: string;
}
/**
 * @generated from protobuf message massa.model.v1.EndorsementDenunciation
 */
export interface EndorsementDenunciation {
    /**
     * Denunciation public key
     *
     * @generated from protobuf field: string public_key = 1;
     */
    publicKey: string;
    /**
     * Denunciation slot
     *
     * @generated from protobuf field: massa.model.v1.Slot slot = 2;
     */
    slot?: Slot;
    /**
     * Denunciation index
     *
     * @generated from protobuf field: uint32 index = 3;
     */
    index: number;
    /**
     * Denunciation hash 1
     *
     * @generated from protobuf field: string hash_1 = 4;
     */
    hash1: string;
    /**
     * Denunciation hash 2
     *
     * @generated from protobuf field: string hash_2 = 5;
     */
    hash2: string;
    /**
     * Denunciation sig 1
     *
     * @generated from protobuf field: string signature_1 = 6;
     */
    signature1: string;
    /**
     * Denunciation sig 2
     *
     * @generated from protobuf field: string signature_2 = 7;
     */
    signature2: string;
}
/**
 * Index for Denunciations in collections (e.g. like a HashMap...)
 *
 * @generated from protobuf message massa.model.v1.DenunciationIndex
 */
export interface DenunciationIndex {
    /**
     * @generated from protobuf oneof: entry
     */
    entry: {
        oneofKind: "blockHeader";
        /**
         * Denunciation block header
         *
         * @generated from protobuf field: massa.model.v1.DenunciationBlockHeader block_header = 1;
         */
        blockHeader: DenunciationBlockHeader;
    } | {
        oneofKind: "endorsement";
        /**
         * Denunciation endorsement
         *
         * @generated from protobuf field: massa.model.v1.DenunciationEndorsement endorsement = 2;
         */
        endorsement: DenunciationEndorsement;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Variant for Block header denunciation index
 *
 * @generated from protobuf message massa.model.v1.DenunciationBlockHeader
 */
export interface DenunciationBlockHeader {
    /**
     * Denunciation slot
     *
     * @generated from protobuf field: massa.model.v1.Slot slot = 1;
     */
    slot?: Slot;
}
/**
 * Variant for Endorsement denunciation index
 *
 * @generated from protobuf message massa.model.v1.DenunciationEndorsement
 */
export interface DenunciationEndorsement {
    /**
     * Denounciation slot
     *
     * @generated from protobuf field: massa.model.v1.Slot slot = 1;
     */
    slot?: Slot;
    /**
     * Denounciation index
     *
     * @generated from protobuf field: uint32 index = 2;
     */
    index: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class Denunciation$Type extends MessageType<Denunciation> {
    constructor() {
        super("massa.model.v1.Denunciation", [
            { no: 1, name: "block_header", kind: "message", oneof: "entry", T: () => BlockHeaderDenunciation },
            { no: 2, name: "endorsement", kind: "message", oneof: "entry", T: () => EndorsementDenunciation }
        ]);
    }
    create(value?: PartialMessage<Denunciation>): Denunciation {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.entry = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<Denunciation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Denunciation): Denunciation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* massa.model.v1.BlockHeaderDenunciation block_header */ 1:
                    message.entry = {
                        oneofKind: "blockHeader",
                        blockHeader: BlockHeaderDenunciation.internalBinaryRead(reader, reader.uint32(), options, (message.entry as any).blockHeader)
                    };
                    break;
                case /* massa.model.v1.EndorsementDenunciation endorsement */ 2:
                    message.entry = {
                        oneofKind: "endorsement",
                        endorsement: EndorsementDenunciation.internalBinaryRead(reader, reader.uint32(), options, (message.entry as any).endorsement)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Denunciation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* massa.model.v1.BlockHeaderDenunciation block_header = 1; */
        if (message.entry.oneofKind === "blockHeader")
            BlockHeaderDenunciation.internalBinaryWrite(message.entry.blockHeader, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* massa.model.v1.EndorsementDenunciation endorsement = 2; */
        if (message.entry.oneofKind === "endorsement")
            EndorsementDenunciation.internalBinaryWrite(message.entry.endorsement, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.Denunciation
 */
export const Denunciation = new Denunciation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlockHeaderDenunciation$Type extends MessageType<BlockHeaderDenunciation> {
    constructor() {
        super("massa.model.v1.BlockHeaderDenunciation", [
            { no: 1, name: "public_key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "slot", kind: "message", T: () => Slot },
            { no: 3, name: "hash_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "hash_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "signature_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "signature_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<BlockHeaderDenunciation>): BlockHeaderDenunciation {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.publicKey = "";
        message.hash1 = "";
        message.hash2 = "";
        message.signature1 = "";
        message.signature2 = "";
        if (value !== undefined)
            reflectionMergePartial<BlockHeaderDenunciation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BlockHeaderDenunciation): BlockHeaderDenunciation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string public_key */ 1:
                    message.publicKey = reader.string();
                    break;
                case /* massa.model.v1.Slot slot */ 2:
                    message.slot = Slot.internalBinaryRead(reader, reader.uint32(), options, message.slot);
                    break;
                case /* string hash_1 */ 3:
                    message.hash1 = reader.string();
                    break;
                case /* string hash_2 */ 4:
                    message.hash2 = reader.string();
                    break;
                case /* string signature_1 */ 5:
                    message.signature1 = reader.string();
                    break;
                case /* string signature_2 */ 6:
                    message.signature2 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BlockHeaderDenunciation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string public_key = 1; */
        if (message.publicKey !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.publicKey);
        /* massa.model.v1.Slot slot = 2; */
        if (message.slot)
            Slot.internalBinaryWrite(message.slot, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string hash_1 = 3; */
        if (message.hash1 !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.hash1);
        /* string hash_2 = 4; */
        if (message.hash2 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.hash2);
        /* string signature_1 = 5; */
        if (message.signature1 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.signature1);
        /* string signature_2 = 6; */
        if (message.signature2 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.signature2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.BlockHeaderDenunciation
 */
export const BlockHeaderDenunciation = new BlockHeaderDenunciation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EndorsementDenunciation$Type extends MessageType<EndorsementDenunciation> {
    constructor() {
        super("massa.model.v1.EndorsementDenunciation", [
            { no: 1, name: "public_key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "slot", kind: "message", T: () => Slot },
            { no: 3, name: "index", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "hash_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "hash_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "signature_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "signature_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<EndorsementDenunciation>): EndorsementDenunciation {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.publicKey = "";
        message.index = 0;
        message.hash1 = "";
        message.hash2 = "";
        message.signature1 = "";
        message.signature2 = "";
        if (value !== undefined)
            reflectionMergePartial<EndorsementDenunciation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EndorsementDenunciation): EndorsementDenunciation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string public_key */ 1:
                    message.publicKey = reader.string();
                    break;
                case /* massa.model.v1.Slot slot */ 2:
                    message.slot = Slot.internalBinaryRead(reader, reader.uint32(), options, message.slot);
                    break;
                case /* uint32 index */ 3:
                    message.index = reader.uint32();
                    break;
                case /* string hash_1 */ 4:
                    message.hash1 = reader.string();
                    break;
                case /* string hash_2 */ 5:
                    message.hash2 = reader.string();
                    break;
                case /* string signature_1 */ 6:
                    message.signature1 = reader.string();
                    break;
                case /* string signature_2 */ 7:
                    message.signature2 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EndorsementDenunciation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string public_key = 1; */
        if (message.publicKey !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.publicKey);
        /* massa.model.v1.Slot slot = 2; */
        if (message.slot)
            Slot.internalBinaryWrite(message.slot, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* uint32 index = 3; */
        if (message.index !== 0)
            writer.tag(3, WireType.Varint).uint32(message.index);
        /* string hash_1 = 4; */
        if (message.hash1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.hash1);
        /* string hash_2 = 5; */
        if (message.hash2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.hash2);
        /* string signature_1 = 6; */
        if (message.signature1 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.signature1);
        /* string signature_2 = 7; */
        if (message.signature2 !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.signature2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.EndorsementDenunciation
 */
export const EndorsementDenunciation = new EndorsementDenunciation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DenunciationIndex$Type extends MessageType<DenunciationIndex> {
    constructor() {
        super("massa.model.v1.DenunciationIndex", [
            { no: 1, name: "block_header", kind: "message", oneof: "entry", T: () => DenunciationBlockHeader },
            { no: 2, name: "endorsement", kind: "message", oneof: "entry", T: () => DenunciationEndorsement }
        ]);
    }
    create(value?: PartialMessage<DenunciationIndex>): DenunciationIndex {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.entry = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<DenunciationIndex>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DenunciationIndex): DenunciationIndex {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* massa.model.v1.DenunciationBlockHeader block_header */ 1:
                    message.entry = {
                        oneofKind: "blockHeader",
                        blockHeader: DenunciationBlockHeader.internalBinaryRead(reader, reader.uint32(), options, (message.entry as any).blockHeader)
                    };
                    break;
                case /* massa.model.v1.DenunciationEndorsement endorsement */ 2:
                    message.entry = {
                        oneofKind: "endorsement",
                        endorsement: DenunciationEndorsement.internalBinaryRead(reader, reader.uint32(), options, (message.entry as any).endorsement)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DenunciationIndex, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* massa.model.v1.DenunciationBlockHeader block_header = 1; */
        if (message.entry.oneofKind === "blockHeader")
            DenunciationBlockHeader.internalBinaryWrite(message.entry.blockHeader, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* massa.model.v1.DenunciationEndorsement endorsement = 2; */
        if (message.entry.oneofKind === "endorsement")
            DenunciationEndorsement.internalBinaryWrite(message.entry.endorsement, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.DenunciationIndex
 */
export const DenunciationIndex = new DenunciationIndex$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DenunciationBlockHeader$Type extends MessageType<DenunciationBlockHeader> {
    constructor() {
        super("massa.model.v1.DenunciationBlockHeader", [
            { no: 1, name: "slot", kind: "message", T: () => Slot }
        ]);
    }
    create(value?: PartialMessage<DenunciationBlockHeader>): DenunciationBlockHeader {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<DenunciationBlockHeader>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DenunciationBlockHeader): DenunciationBlockHeader {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* massa.model.v1.Slot slot */ 1:
                    message.slot = Slot.internalBinaryRead(reader, reader.uint32(), options, message.slot);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DenunciationBlockHeader, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* massa.model.v1.Slot slot = 1; */
        if (message.slot)
            Slot.internalBinaryWrite(message.slot, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.DenunciationBlockHeader
 */
export const DenunciationBlockHeader = new DenunciationBlockHeader$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DenunciationEndorsement$Type extends MessageType<DenunciationEndorsement> {
    constructor() {
        super("massa.model.v1.DenunciationEndorsement", [
            { no: 1, name: "slot", kind: "message", T: () => Slot },
            { no: 2, name: "index", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DenunciationEndorsement>): DenunciationEndorsement {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.index = 0;
        if (value !== undefined)
            reflectionMergePartial<DenunciationEndorsement>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DenunciationEndorsement): DenunciationEndorsement {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* massa.model.v1.Slot slot */ 1:
                    message.slot = Slot.internalBinaryRead(reader, reader.uint32(), options, message.slot);
                    break;
                case /* uint32 index */ 2:
                    message.index = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DenunciationEndorsement, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* massa.model.v1.Slot slot = 1; */
        if (message.slot)
            Slot.internalBinaryWrite(message.slot, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* uint32 index = 2; */
        if (message.index !== 0)
            writer.tag(2, WireType.Varint).uint32(message.index);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.DenunciationEndorsement
 */
export const DenunciationEndorsement = new DenunciationEndorsement$Type();
