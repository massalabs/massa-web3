// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies
// @generated from protobuf file "massa/model/v1/endorsement.proto" (package "massa.model.v1", syntax proto3)
// tslint:disable
//
// Copyright (c) 2023 MASSA LABS <info@massa.net>
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Slot } from "./slot";
/**
 * An endorsement, as sent in the network
 *
 * @generated from protobuf message massa.model.v1.Endorsement
 */
export interface Endorsement {
    /**
     * Slot in which the endorsement can be included
     *
     * @generated from protobuf field: massa.model.v1.Slot slot = 1;
     */
    slot?: Slot;
    /**
     * Endorsement index inside the including block
     *
     * @generated from protobuf field: uint32 index = 2;
     */
    index: number;
    /**
     * Hash of endorsed block
     * This is the parent in thread `self.slot.thread` of the block in which the endorsement is included
     *
     * @generated from protobuf field: string endorsed_block = 3;
     */
    endorsedBlock: string;
}
/**
 * Signed endorsement
 *
 * @generated from protobuf message massa.model.v1.SignedEndorsement
 */
export interface SignedEndorsement {
    /**
     * Endorsement
     *
     * @generated from protobuf field: massa.model.v1.Endorsement content = 1;
     */
    content?: Endorsement;
    /**
     * A cryptographically generated value using `serialized_data` and a public key.
     *
     * @generated from protobuf field: string signature = 2;
     */
    signature: string;
    /**
     * The public-key component used in the generation of the signature
     *
     * @generated from protobuf field: string content_creator_pub_key = 3;
     */
    contentCreatorPubKey: string;
    /**
     * Derived from the same public key used to generate the signature
     *
     * @generated from protobuf field: string content_creator_address = 4;
     */
    contentCreatorAddress: string;
    /**
     * A secure hash of the non-malleable contents of a deterministic binary representation of the block header
     *
     * @generated from protobuf field: string secure_hash = 5;
     */
    secureHash: string;
    /**
     * The size of the serialized endorsement in bytes
     *
     * @generated from protobuf field: uint64 serialized_size = 6;
     */
    serializedSize: bigint;
}
/**
 * EndorsementIds holds endorsements ids
 *
 * @generated from protobuf message massa.model.v1.EndorsementIds
 */
export interface EndorsementIds {
    /**
     * Endorsements ids
     *
     * @generated from protobuf field: repeated string endorsement_ids = 1;
     */
    endorsementIds: string[];
}
/**
 * A wrapper around an endorsement with its metadata
 *
 * @generated from protobuf message massa.model.v1.EndorsementWrapper
 */
export interface EndorsementWrapper {
    /**
     * Whether the endorsement is still in pool
     *
     * @generated from protobuf field: bool in_pool = 1;
     */
    inPool: boolean;
    /**
     * The endorsement appears in `in_blocks`
     * If it appears in multiple blocks, these blocks are in different cliques
     *
     * @generated from protobuf field: repeated string in_blocks = 2;
     */
    inBlocks: string[];
    /**
     * Whether the the endorsement is final (for example in a final block)
     *
     * @generated from protobuf field: bool is_final = 3;
     */
    isFinal: boolean;
    /**
     * The endorsement itself
     *
     * @generated from protobuf field: massa.model.v1.SignedEndorsement endorsement = 4;
     */
    endorsement?: SignedEndorsement;
}
/**
 * Informations about an endorsement with its metadata
 *
 * @generated from protobuf message massa.model.v1.EndorsementInfo
 */
export interface EndorsementInfo {
    /**
     * The endorsement id
     *
     * @generated from protobuf field: string endorsement_id = 1;
     */
    endorsementId: string;
    /**
     * Whether the endorsement is still in pool
     *
     * @generated from protobuf field: bool in_pool = 2;
     */
    inPool: boolean;
    /**
     * The endorsement appears in `in_blocks`
     * If it appears in multiple blocks, these blocks are in different cliques
     *
     * @generated from protobuf field: repeated string in_blocks = 3;
     */
    inBlocks: string[];
    /**
     * Whether the the endorsement is final (for example in a final block)
     *
     * @generated from protobuf field: bool is_final = 4;
     */
    isFinal: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class Endorsement$Type extends MessageType<Endorsement> {
    constructor() {
        super("massa.model.v1.Endorsement", [
            { no: 1, name: "slot", kind: "message", T: () => Slot },
            { no: 2, name: "index", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "endorsed_block", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Endorsement>): Endorsement {
        const message = { index: 0, endorsedBlock: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Endorsement>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Endorsement): Endorsement {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* massa.model.v1.Slot slot */ 1:
                    message.slot = Slot.internalBinaryRead(reader, reader.uint32(), options, message.slot);
                    break;
                case /* uint32 index */ 2:
                    message.index = reader.uint32();
                    break;
                case /* string endorsed_block */ 3:
                    message.endorsedBlock = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Endorsement, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* massa.model.v1.Slot slot = 1; */
        if (message.slot)
            Slot.internalBinaryWrite(message.slot, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* uint32 index = 2; */
        if (message.index !== 0)
            writer.tag(2, WireType.Varint).uint32(message.index);
        /* string endorsed_block = 3; */
        if (message.endorsedBlock !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.endorsedBlock);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.Endorsement
 */
export const Endorsement = new Endorsement$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignedEndorsement$Type extends MessageType<SignedEndorsement> {
    constructor() {
        super("massa.model.v1.SignedEndorsement", [
            { no: 1, name: "content", kind: "message", T: () => Endorsement },
            { no: 2, name: "signature", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "content_creator_pub_key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "content_creator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "secure_hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "serialized_size", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<SignedEndorsement>): SignedEndorsement {
        const message = { signature: "", contentCreatorPubKey: "", contentCreatorAddress: "", secureHash: "", serializedSize: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SignedEndorsement>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SignedEndorsement): SignedEndorsement {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* massa.model.v1.Endorsement content */ 1:
                    message.content = Endorsement.internalBinaryRead(reader, reader.uint32(), options, message.content);
                    break;
                case /* string signature */ 2:
                    message.signature = reader.string();
                    break;
                case /* string content_creator_pub_key */ 3:
                    message.contentCreatorPubKey = reader.string();
                    break;
                case /* string content_creator_address */ 4:
                    message.contentCreatorAddress = reader.string();
                    break;
                case /* string secure_hash */ 5:
                    message.secureHash = reader.string();
                    break;
                case /* uint64 serialized_size */ 6:
                    message.serializedSize = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SignedEndorsement, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* massa.model.v1.Endorsement content = 1; */
        if (message.content)
            Endorsement.internalBinaryWrite(message.content, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string signature = 2; */
        if (message.signature !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.signature);
        /* string content_creator_pub_key = 3; */
        if (message.contentCreatorPubKey !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.contentCreatorPubKey);
        /* string content_creator_address = 4; */
        if (message.contentCreatorAddress !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.contentCreatorAddress);
        /* string secure_hash = 5; */
        if (message.secureHash !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.secureHash);
        /* uint64 serialized_size = 6; */
        if (message.serializedSize !== 0n)
            writer.tag(6, WireType.Varint).uint64(message.serializedSize);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.SignedEndorsement
 */
export const SignedEndorsement = new SignedEndorsement$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EndorsementIds$Type extends MessageType<EndorsementIds> {
    constructor() {
        super("massa.model.v1.EndorsementIds", [
            { no: 1, name: "endorsement_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<EndorsementIds>): EndorsementIds {
        const message = { endorsementIds: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EndorsementIds>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EndorsementIds): EndorsementIds {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string endorsement_ids */ 1:
                    message.endorsementIds.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EndorsementIds, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string endorsement_ids = 1; */
        for (let i = 0; i < message.endorsementIds.length; i++)
            writer.tag(1, WireType.LengthDelimited).string(message.endorsementIds[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.EndorsementIds
 */
export const EndorsementIds = new EndorsementIds$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EndorsementWrapper$Type extends MessageType<EndorsementWrapper> {
    constructor() {
        super("massa.model.v1.EndorsementWrapper", [
            { no: 1, name: "in_pool", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "in_blocks", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_final", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "endorsement", kind: "message", T: () => SignedEndorsement }
        ]);
    }
    create(value?: PartialMessage<EndorsementWrapper>): EndorsementWrapper {
        const message = { inPool: false, inBlocks: [], isFinal: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EndorsementWrapper>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EndorsementWrapper): EndorsementWrapper {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool in_pool */ 1:
                    message.inPool = reader.bool();
                    break;
                case /* repeated string in_blocks */ 2:
                    message.inBlocks.push(reader.string());
                    break;
                case /* bool is_final */ 3:
                    message.isFinal = reader.bool();
                    break;
                case /* massa.model.v1.SignedEndorsement endorsement */ 4:
                    message.endorsement = SignedEndorsement.internalBinaryRead(reader, reader.uint32(), options, message.endorsement);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EndorsementWrapper, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool in_pool = 1; */
        if (message.inPool !== false)
            writer.tag(1, WireType.Varint).bool(message.inPool);
        /* repeated string in_blocks = 2; */
        for (let i = 0; i < message.inBlocks.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.inBlocks[i]);
        /* bool is_final = 3; */
        if (message.isFinal !== false)
            writer.tag(3, WireType.Varint).bool(message.isFinal);
        /* massa.model.v1.SignedEndorsement endorsement = 4; */
        if (message.endorsement)
            SignedEndorsement.internalBinaryWrite(message.endorsement, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.EndorsementWrapper
 */
export const EndorsementWrapper = new EndorsementWrapper$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EndorsementInfo$Type extends MessageType<EndorsementInfo> {
    constructor() {
        super("massa.model.v1.EndorsementInfo", [
            { no: 1, name: "endorsement_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "in_pool", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "in_blocks", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "is_final", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<EndorsementInfo>): EndorsementInfo {
        const message = { endorsementId: "", inPool: false, inBlocks: [], isFinal: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EndorsementInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EndorsementInfo): EndorsementInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string endorsement_id */ 1:
                    message.endorsementId = reader.string();
                    break;
                case /* bool in_pool */ 2:
                    message.inPool = reader.bool();
                    break;
                case /* repeated string in_blocks */ 3:
                    message.inBlocks.push(reader.string());
                    break;
                case /* bool is_final */ 4:
                    message.isFinal = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EndorsementInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string endorsement_id = 1; */
        if (message.endorsementId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.endorsementId);
        /* bool in_pool = 2; */
        if (message.inPool !== false)
            writer.tag(2, WireType.Varint).bool(message.inPool);
        /* repeated string in_blocks = 3; */
        for (let i = 0; i < message.inBlocks.length; i++)
            writer.tag(3, WireType.LengthDelimited).string(message.inBlocks[i]);
        /* bool is_final = 4; */
        if (message.isFinal !== false)
            writer.tag(4, WireType.Varint).bool(message.isFinal);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message massa.model.v1.EndorsementInfo
 */
export const EndorsementInfo = new EndorsementInfo$Type();
