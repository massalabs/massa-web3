{"version":3,"file":"storage.js","sourceRoot":"","sources":["../../../src/basicElements/storage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAO,YAAY,EAAE,MAAM,OAAO,CAAA;AACzC,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAA;AAEnC,MAAM,qBAAqB,GAAG,IAAI,CAAA;AAElC,MAAM,kBAAkB,GAAG,EAAE,CAAA;AAE7B;;;;;;GAMG;AACH,MAAM,UAAU,KAAK,CAAC,aAAqB;IACzC,OAAO,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY,CAAC,qBAAqB,CAAC,CAAA;AACpE,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,OAAO;IACrB,OAAO,KAAK,CAAC,kBAAkB,CAAC,CAAA;AAClC,CAAC;AAED;;;;;;;;;GASG;AACH,MAAM,UAAU,aAAa,CAAC,aAAqB;IACjD,OAAO,KAAK,CAAC,aAAa,CAAC,GAAG,OAAO,EAAE,CAAA;AACzC,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,QAAQ;IACtB,OAAO,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;AAC7B,CAAC","sourcesContent":["import { Mas, fromMicroMas } from './mas'\nimport { U32 } from './serializers'\n\nconst BYTE_COST_MICRO_MASSA = 100n\n\nconst ACCOUNT_SIZE_BYTES = 10\n\n/**\n * Calculates the cost of a given number of bytes.\n *\n * @param numberOfBytes - The number of bytes.\n *\n * @returns The cost in the smallest unit of the Massa currency.\n */\nexport function bytes(numberOfBytes: number): Mas {\n  return BigInt(numberOfBytes) * fromMicroMas(BYTE_COST_MICRO_MASSA)\n}\n\n/**\n * Calculates the cost of creating a new account.\n *\n * @returns The cost in the smallest unit of the Massa currency.\n */\nexport function account(): Mas {\n  return bytes(ACCOUNT_SIZE_BYTES)\n}\n\n/**\n * Calculates the cost of deploying a smart contract.\n *\n * @remarks\n * The cost of deploying a smart contract includes the cost of creating a new account.\n *\n * @param numberOfBytes - The number of bytes of the smart contract.\n *\n * @returns The cost in the smallest unit of the Massa currency.\n */\nexport function smartContract(numberOfBytes: number): Mas {\n  return bytes(numberOfBytes) + account()\n}\n\n/**\n * Calculates the cost of creating a new entry in the datastore.\n *\n * @returns The cost in the smallest unit of the Massa currency.\n */\nexport function newEntry(): Mas {\n  return bytes(U32.SIZE_BYTE)\n}\n"]}