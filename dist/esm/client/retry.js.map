{"version":3,"file":"retry.js","sourceRoot":"","sources":["../../../src/client/retry.ts"],"names":[],"mappings":"AAAA,MAAM,eAAe,GAAG,CAAC,CAAA;AACzB,MAAM,aAAa,GAAG,GAAG,CAAA;AAEzB,MAAM,CAAC,MAAM,kBAAkB,GAAG;IAChC,OAAO,EAAE,eAAe;IACxB,KAAK,EAAE,aAAa;CACrB,CAAA;AAED,uCAAuC;AACvC,MAAM,UAAU,SAAS,CACvB,EAAoB,EACpB,GAAuC;IAEvC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,SAAS,OAAO;YACd,EAAE,EAAE;iBACD,IAAI,CAAC,OAAO,CAAC;iBACb,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACf,IAAI,GAAG,CAAC,OAAO,KAAK,CAAC,EAAE,CAAC;oBACtB,MAAM,CAAC,KAAK,CAAC,CAAA;gBACf,CAAC;qBAAM,CAAC;oBACN,GAAG,CAAC,OAAO,EAAE,CAAA;oBACb,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAA;gBAChC,CAAC;YACH,CAAC,CAAC,CAAA;QACN,CAAC;QACD,OAAO,EAAE,CAAA;IACX,CAAC,CAAC,CAAA;AACJ,CAAC","sourcesContent":["const DEFAULT_RETRIES = 3\nconst DEFAULT_DELAY = 300\n\nexport const DEFAULT_RETRY_OPTS = {\n  retries: DEFAULT_RETRIES,\n  delay: DEFAULT_DELAY,\n}\n\n// Wrapped rpc call with retry strategy\nexport function withRetry<T>(\n  fn: () => Promise<T>,\n  opt: { retries: number; delay: number }\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    function attempt(): void {\n      fn()\n        .then(resolve)\n        .catch((error) => {\n          if (opt.retries === 0) {\n            reject(error)\n          } else {\n            opt.retries--\n            setTimeout(attempt, opt.delay)\n          }\n        })\n    }\n    attempt()\n  })\n}\n"]}