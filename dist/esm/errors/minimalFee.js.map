{"version":3,"file":"minimalFee.js","sourceRoot":"","sources":["../../../src/errors/minimalFee.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAA;AAClC,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAA;AAO1C;;;GAGG;AACH,MAAM,OAAO,eAAgB,SAAQ,SAAS;IACnC,IAAI,GAAG,iBAAiB,CAAA,CAAC,4DAA4D;IAE9F;;;;OAIG;IACH,YAAY,EAAE,UAAU,EAAE,KAAK,EAA6B;QAC1D,uFAAuF;QACvF,KAAK,CACH,qDAAqD,UAAU,0BAA0B,EACzF;YACE,IAAI,EAAE,UAAU,CAAC,UAAU;YAC3B,KAAK;SACN,CACF,CAAA;IACH,CAAC;CACF","sourcesContent":["import { ErrorBase } from './base'\nimport { ErrorCodes } from './utils/codes'\n\ntype ErrorMinimalFeeParameters = {\n  minimalFee: bigint\n  cause?: Error\n}\n\n/**\n * ErrorMinimalFee is a specific type of error that is thrown when the provided fee for an operation\n * is below the minimum required fee for that operation. It extends ErrorBase to provide additional context and metadata.\n */\nexport class ErrorMinimalFee extends ErrorBase {\n  override name = 'ErrorMinimalFee' // Override the default error name with a more specific one.\n\n  /**\n   * Constructs a new ErrorMinimalFee with a message indicating the minimum required fee.\n   * @param minimalFee - The minimum fee that was required for the operation.\n   * @param cause - Optional. The underlying cause of the error for error chaining.\n   */\n  constructor({ minimalFee, cause }: ErrorMinimalFeeParameters) {\n    // Call the base class constructor with a detailed message and the relevant error code.\n    super(\n      `Minimal fees for the operation on this client are ${minimalFee}. Please adjust the fee.`,\n      {\n        code: ErrorCodes.MinimalFee,\n        cause,\n      }\n    )\n  }\n}\n"]}