{"version":3,"file":"varintVersioner.js","sourceRoot":"","sources":["../../../src/crypto/varintVersioner.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAA;AAG3B;;GAEG;AACH,MAAM,CAAC,OAAO,OAAO,eAAe;IAClC;;;;;;;OAOG;IACH,gFAAgF;IAChF,MAAM,CAAC,OAAgB,EAAE,IAAgB;QACvC,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;QAC3C,OAAO,IAAI,UAAU,CAAC,CAAC,GAAG,YAAY,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;IACnD,CAAC;IAED;;;;;;OAMG;IACH,gFAAgF;IAChF,OAAO,CAAC,IAAgB;QACtB,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QACnC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,CAAA;IAC3D,CAAC;CACF","sourcesContent":["import varint from 'varint'\nimport { Versioner, Version } from './interfaces/versioner'\n\n/**\n * Varint-based implementation of the Versioner interface.\n */\nexport default class VarintVersioner implements Versioner {\n  /**\n   * Prepends the version to the data.\n   *\n   * @param version - The version to attach.\n   * @param data - The data to attach the version to.\n   *\n   * @returns The versioned data.\n   */\n  // eslint-disable-next-line class-methods-use-this -- Expected by the interface.\n  attach(version: Version, data: Uint8Array): Uint8Array {\n    const versionArray = varint.encode(version)\n    return new Uint8Array([...versionArray, ...data])\n  }\n\n  /**\n   * Extracts the version from the data.\n   *\n   * @param data - The versioned data.\n   *\n   * @returns The version and the data.\n   */\n  // eslint-disable-next-line class-methods-use-this -- Expected by the interface.\n  extract(data: Uint8Array): { version: Version; data: Uint8Array } {\n    const version = varint.decode(data)\n    return { data: data.slice(varint.decode.bytes), version }\n  }\n}\n"]}