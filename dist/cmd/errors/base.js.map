{"version":3,"file":"base.js","sourceRoot":"","sources":["../../../src/errors/base.ts"],"names":[],"mappings":";;;AAAA,yCAA0C;AAiB1C;;;GAGG;AACH,MAAa,SAAU,SAAQ,KAAK;IAClC,YAAY,CAAU;IACtB,QAAQ,CAAS;IACjB,IAAI,CAAY;IAChB,KAAK,CAAQ;IAEJ,IAAI,GAAG,gBAAgB,CAAA;IAChC,YAAY,YAAoB,EAAE,IAAqB;QACrD,KAAK,EAAE,CAAA;QAEP,MAAM,cAAc,GAClB,IAAI,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAA;QACnE,MAAM,cAAc,GAAG,IAAI,EAAE,QAAQ;YACnC,CAAC,CAAC,aAAa,IAAI,EAAE,QAAQ,wBAAwB;YACrD,CAAC,CAAC,EAAE,CAAA;QAEN,MAAM,cAAc,GAAG,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;QAEtE,IAAI,CAAC,OAAO,GAAG;YACb,YAAY;YACZ,cAAc;YACd,cAAc;YACd,cAAc;SACf;aACE,MAAM,CAAC,OAAO,CAAC;aACf,IAAI,CAAC,MAAM,CAAC,CAAA;QAEf,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,YAAY,IAAI,EAAE,CAAA;QAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE,QAAQ,CAAA;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,IAAI,kBAAU,CAAC,YAAY,CAAA;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,KAAK,CAAA;IAC1B,CAAC;CACF;AAhCD,8BAgCC","sourcesContent":["import { ErrorCodes } from './utils/codes'\n\nexport type BaseParameters = {\n  code?: ErrorCodes\n  docsPath?: string\n  metaMessages?: string[]\n} & (\n  | {\n      cause?: never\n      details?: string\n    }\n  | {\n      cause: ErrorBase | Error\n      details?: never\n    }\n)\n\n/**\n * ErrorBase extends the native Error class to provide additional metadata handling for richer error information.\n * This class can serve as a base for more specific error types in a wallet or similar system.\n */\nexport class ErrorBase extends Error {\n  metaMessages: string[]\n  docsPath?: string\n  code: ErrorCodes\n  cause?: Error\n\n  override name = 'MassaWeb3Error'\n  constructor(shortMessage: string, args?: BaseParameters) {\n    super()\n\n    const metaMessageStr =\n      args?.metaMessages?.map((msg) => `Meta: ${msg}`).join('\\n') || ''\n    const docsMessageStr = args?.docsPath\n      ? `Docs: see ${args?.docsPath} for more information.`\n      : ''\n\n    const detailsMessage = args?.details ? `Details: ${args.details}` : ''\n\n    this.message = [\n      shortMessage,\n      metaMessageStr,\n      docsMessageStr,\n      detailsMessage,\n    ]\n      .filter(Boolean)\n      .join('\\n\\n')\n\n    this.metaMessages = args?.metaMessages || []\n    this.docsPath = args?.docsPath\n    this.code = args?.code ?? ErrorCodes.UnknownError\n    this.cause = args?.cause\n  }\n}\n"]}