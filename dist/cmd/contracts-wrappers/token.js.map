{"version":3,"file":"token.js","sourceRoot":"","sources":["../../../src/contracts-wrappers/token.ts"],"names":[],"mappings":"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","sourcesContent":["import { Args, bytesToStr, U256, U8 } from '../basicElements'\nimport { Operation } from '../operation'\nimport { CallSCOptions, ReadSCOptions, SmartContract } from '../smartContracts'\n\nexport class MRC20 extends SmartContract {\n  async version(options?: ReadSCOptions): Promise<string> {\n    const res = await this.read('version', undefined, options)\n    return bytesToStr(res.value)\n  }\n\n  async name(options?: ReadSCOptions): Promise<string> {\n    const res = await this.read('name', undefined, options)\n    return bytesToStr(res.value)\n  }\n\n  async symbol(options?: ReadSCOptions): Promise<string> {\n    const res = await this.read('symbol', undefined, options)\n    return bytesToStr(res.value)\n  }\n\n  async decimals(options?: ReadSCOptions): Promise<number> {\n    const res = await this.read('decimals', undefined, options)\n    return Number(U8.fromBytes(res.value))\n  }\n\n  async totalSupply(options?: ReadSCOptions): Promise<bigint> {\n    const res = await this.read('totalSupply', undefined, options)\n    return U256.fromBytes(res.value)\n  }\n\n  async balanceOf(address: string, options?: ReadSCOptions): Promise<bigint> {\n    const res = await this.read(\n      'balanceOf',\n      new Args().addString(address),\n      options\n    )\n    return U256.fromBytes(res.value)\n  }\n\n  async transfer(\n    to: string,\n    amount: bigint,\n    options?: CallSCOptions\n  ): Promise<Operation> {\n    return this.call(\n      'transfer',\n      new Args().addString(to).addU256(amount),\n      options\n    )\n  }\n\n  async allowance(\n    ownerAddress: string,\n    spenderAddress: string,\n    options?: ReadSCOptions\n  ): Promise<bigint> {\n    const res = await this.read(\n      'allowance',\n      new Args().addString(ownerAddress).addString(spenderAddress),\n      options\n    )\n    return U256.fromBytes(res.value)\n  }\n\n  async increaseAllowance(\n    spenderAddress: string,\n    amount: bigint,\n    options?: CallSCOptions\n  ): Promise<Operation> {\n    return this.call(\n      'increaseAllowance',\n      new Args().addString(spenderAddress).addU256(amount),\n      options\n    )\n  }\n\n  async decreaseAllowance(\n    spenderAddress: string,\n    amount: bigint,\n    options?: CallSCOptions\n  ): Promise<Operation> {\n    return this.call(\n      'decreaseAllowance',\n      new Args().addString(spenderAddress).addU256(amount),\n      options\n    )\n  }\n\n  async transferFrom(\n    spenderAddress: string,\n    recipientAddress: string,\n    amount: bigint,\n    options?: CallSCOptions\n  ): Promise<Operation> {\n    return this.call(\n      'transferFrom',\n      new Args()\n        .addString(spenderAddress)\n        .addString(recipientAddress)\n        .addU256(amount),\n      options\n    )\n  }\n}\n"]}