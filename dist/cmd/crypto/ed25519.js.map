{"version":3,"file":"ed25519.js","sourceRoot":"","sources":["../../../src/crypto/ed25519.ts"],"names":[],"mappings":";;;AAAA,2DAAoC;AAGpC;;GAEG;AACH,MAAqB,OAAO;IAC1B,gFAAgF;IAChF,kBAAkB;QAChB,OAAO,EAAE,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAA;IACpC,CAAC;IAED,gFAAgF;IAChF,KAAK,CAAC,YAAY,CAAC,UAAsB;QACvC,OAAO,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;IACpC,CAAC;IAED,gFAAgF;IAChF,KAAK,CAAC,IAAI,CAAC,UAAsB,EAAE,IAAgB;QACjD,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;IAClC,CAAC;IAED,gFAAgF;IAChF,KAAK,CAAC,MAAM,CACV,SAAqB,EACrB,IAAgB,EAChB,SAAqB;QAErB,OAAO,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,CAAC,CAAA;IAC9C,CAAC;CACF;AAxBD,0BAwBC","sourcesContent":["import * as ed from '@noble/ed25519'\nimport Signer from './interfaces/signer'\n\n/**\n * Ed25519 implementation of the Signer interface.\n */\nexport default class Ed25519 implements Signer {\n  // eslint-disable-next-line class-methods-use-this -- Expected by the interface.\n  generatePrivateKey(): Uint8Array {\n    return ed.utils.randomPrivateKey()\n  }\n\n  // eslint-disable-next-line class-methods-use-this -- Expected by the interface.\n  async getPublicKey(privateKey: Uint8Array): Promise<Uint8Array> {\n    return ed.getPublicKey(privateKey)\n  }\n\n  // eslint-disable-next-line class-methods-use-this -- Expected by the interface.\n  async sign(privateKey: Uint8Array, data: Uint8Array): Promise<Uint8Array> {\n    return ed.sign(data, privateKey)\n  }\n\n  // eslint-disable-next-line class-methods-use-this -- Expected by the interface.\n  async verify(\n    publicKey: Uint8Array,\n    data: Uint8Array,\n    signature: Uint8Array\n  ): Promise<boolean> {\n    return ed.verify(signature, data, publicKey)\n  }\n}\n"]}