{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/basicElements/serializers/index.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;;AAEH,kCAAsC;AAEtC;;GAEG;AACH,oDAAyB;AAEzB;;;;GAIG;AACH,oDAAyB;AAEzB;;GAEG;AACH,iDAAsB;AAEtB;;GAEG;AACH,mDAAwB;AAExB,SAAgB,eAAe,CAAC,QAAkB;IAChD,OAAO,QAAQ,CAAC,MAAM,CACpB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,WAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3E,+DAA+D;IAC/D,IAAI,UAAU,CAAC,CAAC,CAAC,CAClB,CAAA;AACH,CAAC;AAND,0CAMC;AAED,yDAA8B;AAE9B,sDAA2B","sourcesContent":["/**\n * This module provides encoding and decoding functions for various data types.\n * It includes functions for strings, numeric data (integers and floating-point numbers),\n * booleans, and arrays containing native types.\n */\n\nimport { Args, IParam } from '../args'\n\n/**\n * This module exports encoding and decoding functions for strings.\n */\nexport * from './strings'\n\n/**\n * This module exports functions needed to process numeric data, such as integers and\n * floating point numbers and their binary representations in Uint8Array.\n * The functions handle signed and unsigned native integers.\n */\nexport * from './numbers'\n\n/**\n * This module exports encoding and decoding functions for booleans.\n */\nexport * from './bool'\n\n/**\n * This module exports serialization and deserialization functions for arrays containing native types.\n */\nexport * from './arrays'\n\nexport function argsListToBytes(argsList: IParam[]): Uint8Array {\n  return argsList.reduce(\n    (acc, curr) => Args.concatArrays(acc, new TextEncoder().encode(curr.value)),\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    new Uint8Array(0)\n  )\n}\n\nexport * from './number/index'\n\nexport * from './interface'\n"]}