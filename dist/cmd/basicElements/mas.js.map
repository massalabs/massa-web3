{"version":3,"file":"mas.js","sourceRoot":"","sources":["../../../src/basicElements/mas.ts"],"names":[],"mappings":";;;;AAAA,oEAAgC;AAChC,kDAA0D;AAE7C,QAAA,WAAW,GAAG,CAAC,CAAA;AACf,QAAA,aAAa,GAAG,GAAG,CAAA;AAChC,MAAM,SAAS,GAAG,EAAE,CAAA;AAEP,QAAA,sBAAsB,GAAG,8BAA8B,CAAA;AACvD,QAAA,qBAAqB,GAAG,qBAAqB,CAAA;AAQ1D;;;;;;;;;GASG;AACH,SAAgB,OAAO,CAAC,KAAU;IAChC,OAAO,IAAA,gBAAU,EAAC,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,mBAAW,CAAC,CAAC,CAAA;AACrE,CAAC;AAFD,0BAEC;AAED;;;;;;;;;GASG;AACH,SAAgB,YAAY,CAAC,KAAU;IACrC,MAAM,KAAK,GAAG,CAAC,CAAA;IACf,OAAO,IAAA,gBAAU,EAAC,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,mBAAW,GAAG,KAAK,CAAC,CAAC,CAAA;AAC7E,CAAC;AAHD,oCAGC;AAED;;;;;;;;;GASG;AACH,SAAgB,YAAY,CAAC,KAAU;IACrC,MAAM,KAAK,GAAG,CAAC,CAAA;IACf,OAAO,IAAA,gBAAU,EAAC,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,mBAAW,GAAG,KAAK,CAAC,CAAC,CAAA;AAC7E,CAAC;AAHD,oCAGC;AAED;;;;;;;;;GASG;AACH,SAAgB,WAAW,CAAC,KAAU;IACpC,MAAM,IAAI,GAAG,CAAC,CAAA;IACd,OAAO,IAAA,gBAAU,EAAC,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,mBAAW,GAAG,IAAI,CAAC,CAAC,CAAA;AAC5E,CAAC;AAHD,kCAGC;AAED;;;;;;;;GAQG;AACH,SAAgB,UAAU,CAAC,KAAa;IACtC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAC9B,+DAA+D;IAC/D,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACrB,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAA;IACnC,CAAC;IAED,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IAC5B,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IAClC,IAAI,WAAW,CAAC,MAAM,GAAG,mBAAW,EAAE,CAAC;QACrC,MAAM,IAAI,KAAK,CAAC,6BAAqB,CAAC,CAAA;IACxC,CAAC;IAED,MAAM,GAAG,GAAG,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,mBAAW,EAAE,GAAG,CAAC,CAAC,CAAA;IAEtE,OAAO,IAAA,gBAAU,EAAC,GAAG,CAAC,CAAA;AACxB,CAAC;AAhBD,gCAgBC;AACD;;;;;;;;GAQG;AACH,SAAgB,QAAQ,CACtB,KAAU,EACV,gBAA+B,IAAI;IAEnC,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,qBAAa,CAAC,EAAE,CAAC;QACjD,MAAM,IAAI,KAAK,CAAC,6BAAqB,CAAC,CAAA;IACxC,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,oBAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,mBAAW,EAAE,CAAC,CAAA;IAE1E,OAAO,aAAa,KAAK,IAAI;QAC3B,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,oBAAO,CAAC,aAAa,CAAC;QAC3D,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAA;AAC5B,CAAC;AAbD,4BAaC","sourcesContent":["import Decimal from 'decimal.js'\nimport { U64, fromNumber } from './serializers/number/u64'\n\nexport const NB_DECIMALS = 9\nexport const SIZE_U256_BIT = 256\nconst POWER_TEN = 10\n\nexport const ERROR_NOT_SAFE_INTEGER = 'value is not a safe integer.'\nexport const ERROR_VALUE_TOO_LARGE = 'value is too large.'\n\n/**\n * Defines 'Mas' as a type for representing nano massa,\n * the smallest unit in Massa currency equivalent to 10^9.\n */\nexport type Mas = U64\n\n/**\n * Converts an integer value to the smallest unit of the Massa currency.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger#description\n *\n * @param value - The integer value.\n * @returns The value in the smallest unit of the Massa currency.\n *\n * @throws An error if the value is not a safe integer.\n */\nexport function fromMas(value: U64): Mas {\n  return fromNumber(value * BigInt(POWER_TEN) ** BigInt(NB_DECIMALS))\n}\n\n/**\n * Converts an integer value in milli Massa to the smallest unit of the Massa currency.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger#description\n *\n * @param value - The value in milli Massa.\n * @returns The value in the smallest unit of the Massa currency.\n *\n * @throws An error if the value is not a safe integer.\n */\nexport function fromMilliMas(value: U64): Mas {\n  const milli = 3\n  return fromNumber(value * BigInt(POWER_TEN) ** BigInt(NB_DECIMALS - milli))\n}\n\n/**\n * Converts an integer value in micro Massa to the smallest unit of the Massa currency.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger#description\n *\n * @param value - The value in micro Massa.\n * @returns The value in the smallest unit of the Massa currency.\n *\n * @throws An error if the value is not a safe integer.\n */\nexport function fromMicroMas(value: U64): Mas {\n  const micro = 6\n  return fromNumber(value * BigInt(POWER_TEN) ** BigInt(NB_DECIMALS - micro))\n}\n\n/**\n * Converts an integer value in nano Massa to the smallest unit of the Massa currency.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger#description\n *\n * @param value - The value in nano Massa.\n * @returns The value in the smallest unit of the Massa currency.\n *\n * @throws An error if the value is not a safe integer.\n */\nexport function fromNanoMas(value: U64): Mas {\n  const nano = 9\n  return fromNumber(value * BigInt(POWER_TEN) ** BigInt(NB_DECIMALS - nano))\n}\n\n/**\n * Converts a decimal value in Mas to the smallest unit of the Massa currency.\n *\n * @param value - The decimal value.\n * @returns The value in the smallest unit of the Massa currency.\n *\n * @throws An error if the format is not a decimal.\n * @throws An error if the value is too large to be represented by an U256 or has too many decimals.\n */\nexport function fromString(value: string): Mas {\n  const parts = value.split('.')\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n  if (parts.length > 2) {\n    throw new Error('invalid format')\n  }\n\n  const integerPart = parts[0]\n  const decimalPart = parts[1] || ''\n  if (decimalPart.length > NB_DECIMALS) {\n    throw new Error(ERROR_VALUE_TOO_LARGE)\n  }\n\n  const mas = BigInt(integerPart + decimalPart.padEnd(NB_DECIMALS, '0'))\n\n  return fromNumber(mas)\n}\n/**\n * Converts a Mas value to a string with rounding approximation.\n *\n * @param value - The Mas value.\n * @param decimalPlaces - The number of decimal places to include in the string.\n * @returns The value as a string.\n *\n * @throws An error if the value is too large to be represented by a U256.\n */\nexport function toString(\n  value: Mas,\n  decimalPlaces: number | null = null\n): string {\n  if (BigInt(value) >= 1n << BigInt(SIZE_U256_BIT)) {\n    throw new Error(ERROR_VALUE_TOO_LARGE)\n  }\n\n  const scaledValue = new Decimal(value.toString()).div(`1e+${NB_DECIMALS}`)\n\n  return decimalPlaces !== null\n    ? scaledValue.toFixed(decimalPlaces, Decimal.ROUND_HALF_UP)\n    : scaledValue.toString()\n}\n"]}