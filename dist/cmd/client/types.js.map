{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/client/types.ts"],"names":[],"mappings":";;;AAEA,IAAY,SAMX;AAND,WAAY,SAAS;IACnB,oCAAuB,CAAA;IACvB,0BAAa,CAAA;IACb,4BAAe,CAAA;IACf,oDAAuC,CAAA;IACvC,oDAAuC,CAAA;AACzC,CAAC,EANW,SAAS,yBAAT,SAAS,QAMpB","sourcesContent":["import { EventExecutionContext } from '../generated/client'\n\nexport enum Transport {\n  WebSocket = 'websocket',\n  HTTP = 'http',\n  HTTPS = 'https',\n  PostMessageWindow = 'postmessagewindow',\n  PostMessageIframe = 'postmessageiframe',\n}\n\nexport type Slot = {\n  period: number\n  thread: number\n}\n\nexport type TransportOptions = {\n  path?: string\n  protocol?: string\n}\n\nexport type ClientOptions = {\n  retry: { retries: number; delay: number }\n}\n\nexport type SCEvent = {\n  data: string\n  context: EventExecutionContext\n}\n\nexport type SendOperationInput = {\n  data: Uint8Array\n  publicKey: string\n  signature: string\n}\n\nexport type EventFilter = {\n  start?: Slot\n  end?: Slot\n  smartContractAddress?: string\n  callerAddress?: string\n  operationId?: string\n  isFinal?: boolean\n  isError?: boolean\n}\n\nexport type ReadOnlyCallResult = {\n  value: Uint8Array\n  info: {\n    gasCost: number\n    error?: string\n    events: SCEvent[]\n    stateChanges: {\n      ledgerChanges: Record<string, unknown>\n      asyncPoolChanges: Record<string, unknown>[]\n      posChanges: Record<string, unknown>\n      executedOpsChanges: Record<string, unknown>\n      executedDenunciationsChanges: Record<string, unknown>\n      executionTrailHashChange: string\n    }\n  }\n}\n\nexport type DatastoreEntry = {\n  address: string\n  key: Uint8Array | string\n}\n"]}