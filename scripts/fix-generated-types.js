#!/usr/bin/env node

/**
 * Post-processing script to fix extremely long type names generated by open-rpc-typings
 * This script automatically replaces overly long type names with shorter, manageable aliases
 */

const fs = require('fs');
const path = require('path');

const CLIENT_TYPES_FILE = path.join(__dirname, '..', 'src', 'generated', 'client-types.ts');

function fixLongTypeNames() {
    console.log('üîß Fixing long type names in generated client-types.ts...');
    
    if (!fs.existsSync(CLIENT_TYPES_FILE)) {
        console.error('‚ùå client-types.ts not found!');
        process.exit(1);
    }
    
    let content = fs.readFileSync(CLIENT_TYPES_FILE, 'utf8');
    
    // Find the single extremely long type declaration (AnyOf... with 200+ characters)
    const longTypeMatch = content.match(/export type (AnyOf[A-Za-z0-9]{200,})\s*=\s*([^;]+);/);
    
    if (longTypeMatch) {
        const longTypeName = longTypeMatch[1];
        const typeDefinition = longTypeMatch[2];

        console.log(`üìù Found long type: ${longTypeName.substring(0, 50)}... (${longTypeName.length} chars)`);
        
        // Replace with a shorter, meaningful name (avoiding conflict with existing rpcTypes)
        const newTypeDeclaration = `/**
 * Union type representing all possible RPC request/response types.
 * Auto-generated type name was shortened for better file system compatibility.
 */
export type RpcTypesUnion = ${typeDefinition};`;
        
        content = content.replace(longTypeMatch[0], newTypeDeclaration);
        
        fs.writeFileSync(CLIENT_TYPES_FILE, content);
        console.log('‚úÖ Replaced with shorter name: RpcTypesUnion');
    } else {
        console.log('‚ÑπÔ∏è  No long type names found that need fixing.');
    }
}

// Main execution
if (require.main === module) {
    try {
        fixLongTypeNames();
        console.log('üéâ Type fixing completed successfully!');
    } catch (error) {
        console.error('‚ùå Error fixing types:', error.message);
        process.exit(1);
    }
}

module.exports = { fixLongTypeNames };
